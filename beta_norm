from __future__ import division
import sys
import numpy as np
import scipy as sp
import math
import csv
import pandas as pd

#################################################################################
# ----------------------------------- NOTES ----------------------------------- #
#################################################################################
#
# This was built to determine the beta parameter for a specific peak
# from a SEVI spectrum
#
# Input: python beta_norm.py input_file_name scan_wavelength lowerbound upperbound peakname
# scan_wavelength 	= wavelength of light used in this scan (given in nm)
# lowerbound 		= lowest index of the column for the peak of interest
# upperbound		= highest index of the column for the peak of interest
# peakname		= name of peak to be used in output file (see below)
# 
# NOTE: input must be a .csv of the following format
#	col 1	  col 2	      col 3	col 4	col 5
#	###	Intensity   Anisotropy   eBE	###
# NOTE: lowerbound & upperbound must be integers
# NOTE: lowerbound & upperbound should be the indexs in origin/.csv (start with 1, not 0) 
# The important thing is that col's 2-4 are these values (and contain only numeric values)
#
# Output: a .txt file formatted as follows:
# 
# ====================================================================================
# ====================================================================================
#			 This section is for [peakname] at [wavelength]
# ====================================================================================
# ====================================================================================
# Following are the integrated intensity, anisotropy, and beta parameter, respectively
# NUMBER 
# NUMBER
# NUMBER
#
#
#################################################################################
# ----------------------------------- START ----------------------------------- #
#################################################################################

filename = sys.argv[1]
wavelength = sys.argv[2]
lowerbound = sys.argv[3]
upperbound = sys.argv[4]
peakname = sys.argv[5]
# allows me to take inputs from the command line

if upperbound < lowerbound:
	sys.exit("FAILURE: lowerbound not lower than upperbound")
	 
titlebox = '='*84+'\n'
# annoying titlebox line I didn't want to rewrite a bunch

outfilename = str(filename).replace(".csv","")+'_beta.txt'
# create the filename for the output file

f1 = open(outfilename,'a')
# writes to this new filename all the information that we will want

f1.write(titlebox+titlebox+'\t\t\tThis section is for peak ' + str(peakname) + ' at ' + str(wavelength)+' nm\n')
f1.write(titlebox+titlebox)
# writes the header shown in the notes section above

cols = pd.read_csv(filename,header=None, usecols=[1,2,3])
# uses the pandas package to read the .csv file and save each column to 
# the desired variable

Intensity = cols[1]
Anisotropy = cols[2]
eBE = cols[3]
eKE = np.zeros((len(eBE),1))
# defining all of the useful variables for this project!

for i in range(len(eBE)):
	eKE[i,0] = 1240.0/float(wavelength) - float(eBE[i])/8065.6
# populates the eKE array with the correct values by taking eKE = hv - eBE

intbounds = int(upperbound) - int(lowerbound)
# creates the bounds over which we will integrate from user input

int_intensity = 0
int_anisotropy = 0

for i in range(intbounds):
	j = i + int(lowerbound) - 1
	int_intensity += (eKE[j+1,0]-eKE[j,0])*(Intensity[j+1]+Intensity[j])/2
	int_anisotropy += (eKE[j+1,0]-eKE[j,0])*(Anisotropy[j+1]+Anisotropy[j])/2
beta = int_anisotropy/int_intensity

f1.write('Following is the input used to generate this section\n' + str(filename) +' ' + str(wavelength) +' ' + str(lowerbound) +' '+ str(upperbound) +' ' + str(peakname)+'\n')
f1.write('Following are the integrated intensity, anisotropy, and beta parameter, respectively\n' + str(int_intensity) +'\n' + str(int_anisotropy) + '\n' + str(beta) +'\n\n\n')

print int_intensity
print int_anisotropy
print beta
